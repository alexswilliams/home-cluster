apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx

  replicas: 1
  strategy:
    type: Recreate

  template:

    metadata:
      labels:
        app: nginx

    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always

      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: nginx-htpasswd
          secret:
            secretName: nginx-htpasswd
            defaultMode: 0444
        - name: letsencrypt
          persistentVolumeClaim:
            claimName: certificate-pvc
            readOnly: true

      containers:
        - name: nginx
          image: nginx:1.17.1-alpine
          resources:
            requests:
              memory: 32Mi
              cpu: 10m
            limits:
              memory: 192Mi
              cpu: 50m
          ports:
            - containerPort: 443
              hostPort: 443
              name: https
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-config
              subPath: nginx.conf
              readOnly: true
            - mountPath: /etc/nginx/conf/htpasswd
              name: nginx-htpasswd
              subPath: htpasswd
              readOnly: true
            - mountPath: /etc/letsencrypt
              name: letsencrypt
              readOnly: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events { }
    http {
      log_format   main '{"remoteAddr":"$remote_addr",'
      '"remoteUser":"$remote_user","localTime":"$time_local",'
      '"status":"$status","request":"$request","bodyBytesSent":$body_bytes_sent,'
      '"httpReferer":"$http_referer","httpUserAgent":"$http_user_agent",'
      '"httpXForwardedFor":"$http_x_forwarded_for"}';

      server {
        listen 443 ssl;
        server_name london.alexswilliams.co.uk;

        access_log /dev/stdout main;

        ssl_certificate       /etc/letsencrypt/live/london.alexswilliams.co.uk/fullchain.pem;
        ssl_certificate_key   /etc/letsencrypt/live/london.alexswilliams.co.uk/privkey.pem;
        ssl_protocols         TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        auth_basic "Please authenticate";
        auth_basic_user_file "conf/htpasswd";

        location / {
          auth_basic off;
          return 401 "401 Forbidden";
        }

        # The trailing / on these URIs is hella important, as it strips the matched prefix.
        #location /elasticsearch {
        #  proxy_pass http://elasticsearch-service:9200/;
        #}
        #location /artifactory {
        #  proxy_pass http://artifactory-service:8081/;
        #}
        location /grafana/ {
          proxy_pass http://grafana-service:3000/;
          proxy_set_header Authorization "";
        }
        location /prometheus/ {
          proxy_pass http://prometheus-service:9090/;
        }
        location /node-exporter/ {
          proxy_pass http://node-exporter-service:9100/;
        }

        # Kibana handles its own proxy forward name stripping.
        #location /kibana {
        #  proxy_pass http://kibana-service:5601;
        #}
      }
    }