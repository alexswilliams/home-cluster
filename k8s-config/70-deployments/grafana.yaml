apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana

  replicas: 1
  strategy:
    type: Recreate

  template:
    metadata:
      labels:
        app: grafana
    spec:
      automountServiceAccountToken: false
      priorityClassName: reporting
      
      volumes:
        - name: grafana-ini
          configMap:
            name: grafana-config
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboard-providers
          configMap:
            name: grafana-dashboard-providers
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards

      containers:
        - name: grafana
          image: grafana/grafana:7.1.4-ubuntu
          env:
            - name: GF_PATHS_CONFIG
              value: /etc/grafana/grafana.ini
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  optional: true
                  name: grafana-secrets
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  optional: true
                  name: grafana-secrets
                  key: admin-password
          volumeMounts:
            - mountPath: /etc/grafana/grafana.ini
              name: grafana-ini
              subPath: grafana.ini
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-providers
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboards

          resources:
            requests:
              memory: "28Mi"
              cpu: "8m"
            limits:
              memory: "64Mi"
              cpu: "100m"
          ports:
            - containerPort: 3000
              name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    [server]
    http_port = 3000
    protocol = http
    root_url = https://falkenstein.alexswilliams.co.uk/grafana/
    enable_gzip = true

    [database]
    type = sqlite3

    [users]
    allow_sign_up = false
    auto_assign_org = true
    auto_assign_org_id = 1
    auto_assign_org_role = Admin

    [session]
    provider = memory

    [security]
    cookie_secure = true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus-service:9090
        isDefault: true
        jsonData:
          timeInterval: "10s"
          httpMethod: GET
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
data:
  default.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        updateIntervalSeconds: 60
        options:
          path: /var/lib/grafana/dashboards
