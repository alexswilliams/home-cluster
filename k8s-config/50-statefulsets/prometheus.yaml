apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
spec:
  serviceName: prometheus-service
  selector:
    matchLabels:
      app: prometheus

  updateStrategy:
    type: RollingUpdate
  replicas: 1

  template:
    metadata:
      labels:
        app: prometheus

    spec:
      terminationGracePeriodSeconds: 60
      priorityClassName: data-recorders
      automountServiceAccountToken: false
      
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: prometheus-pvc
        - name: config
          configMap:
            name: prometheus-config
            defaultMode: 0444
        - name: rules
          configMap:
            name: prometheus-rules
            defaultMode: 0444

      initContainers:
        - name: prepare-volume-for-prometheus
          image: busybox
          command:
            - sh
            - -c
            - chmod -R 0777 /prometheus
          volumeMounts:
            - name: data
              mountPath: /prometheus
          resources:
            requests:
              memory: "256Mi"
              cpu: "5m"
            limits:
              memory: "256Mi"
              cpu: "30m"
      containers:
        - name: prometheus
          image: prom/prometheus:v2.20.1
          resources:
            requests:
              memory: "80Mi"
              cpu: "15m"
            limits:
              memory: "128Mi"
              cpu: "250m"
          ports:
            - containerPort: 9090
              name: http
          volumeMounts:
            - name: data
              mountPath: /prometheus
            - name: config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
              readOnly: true
            - name: rules
              mountPath: /etc/prometheus/rules/
              readOnly: true
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --web.external-url=/prometheus/
            - --web.route-prefix=/
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time=1y
            - --storage.tsdb.retention.size=8GB
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval:     10s
      scrape_timeout:      8s
      evaluation_interval: 10s

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager:9093

    rule_files:
      - /etc/prometheus/rules/*.yaml
      - /etc/prometheus/rules/*.yml

    scrape_configs:
      - job_name: kubernetes-metrics
        scrape_interval: 20s
        metrics_path: /metrics
        static_configs:
          - targets:
              - kube-state-metrics.kube-system:8080

      - job_name: kube-state-metrics-telemetry
        scrape_interval: 20s
        metrics_path: /metrics
        static_configs:
          - targets:
              - kube-state-metrics.kube-system:8081

      - job_name: node-exporter-vps
        scrape_interval: 20s
        metrics_path: /metrics
        static_configs:
          - targets:
              - node-exporter-service:9100

      - job_name: fluentd
        scrape_interval: 60s
        metrics_path: /metrics
        static_configs:
          - targets:
              - fluentd-service:24231

      - job_name: alex-pi-node-exporter
        scrape_interval: 20s
        metrics_path: /metrics
        static_configs:
          - targets:
              - 10.254.1.20:20001

      - job_name: alex-pi-push-gateway
        scrape_interval: 5s
        scrape_timeout: 5s
        metrics_path: /metrics
        static_configs:
          - targets:
              - 10.254.1.20:20002

      # - job_name: alex-minecraft-desktop
      #   scrape_interval: 30s
      #   scrape_timeout: 30s
      #   metrics_path: /metrics
      #   static_configs:
      #     - targets:
      #         - 10.254.1.20:20004

      - job_name: alex-router-telegraf
        scrape_interval: 30s
        scrape_timeout: 30s
        metrics_path: /metrics
        static_configs:
          - targets:
              - 10.254.1.20:20005

      - job_name: vps-telegraf
        scrape_interval: 30s
        scrape_timeout: 30s
        metrics_path: /metrics
        static_configs:
          - targets:
              - telegraf:9273

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
data:
  smart-plugs.yaml: |
    groups:
      - name: washing-machine-status
        rules:
          - alert: Washing Machine Started
            expr: clamp_min(clamp_max(max_over_time(power_mw{alias="Washing Machine"}[30s]) > 2000 and max_over_time(power_mw{alias="Washing Machine"}[30s] offset 30s) <= 2000, 1), 1)
            labels:
              rube_goldberg_pipeline_stage: washing-started
          - alert: Washing Machine Finished
            expr: clamp_min(clamp_max(max_over_time(power_mw{alias="Washing Machine"}[1m]) < 2000 and max_over_time(power_mw{alias="Washing Machine"}[90s]) >= 2000, 1), 1)
            labels:
              rube_goldberg_pipeline_stage: washing-finished

      - name: heater-status
        rules:
          - alert: Heater On
            expr: current_ma{alias="Heater"} > 500
            labels:
              rube_goldberg_pipeline_stage: heater-on

